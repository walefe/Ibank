services:
  app:
    container_name: ibank-app
    build:
      context: .
      target: ${DOCKER_TARGET:-development}
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      # - /usr/src/app/dist
    networks:
      - ibank
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        if [ \"$NODE_ENV\" = 'production' ]; then
          pnpm exec prisma migrate deploy && node dist/main;
        else
          pnpm exec prisma generate &&
          pnpm exec prisma db push &&
          pnpm run start:dev;
        fi
      "
  db:
    container_name: ibank-db
    image: postgres:17-alpine
    env_file: .env
    ports:
     - '5432:5432'
    volumes:
    - postgres_data:/var/lib/postgresql/data
    networks:
      - ibank
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  ibank:
    driver: bridge

volumes:
 postgres_data: